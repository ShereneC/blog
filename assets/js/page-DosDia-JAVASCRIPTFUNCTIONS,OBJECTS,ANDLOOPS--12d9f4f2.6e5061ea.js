(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{485:function(e,t,a){"use strict";a.r(t);var n=a(2),r=Object(n.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"dos-dia-javascript-functions-objects-and-loops"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dos-dia-javascript-functions-objects-and-loops"}},[e._v("#")]),e._v(" Dos Dia - JAVASCRIPT FUNCTIONS, OBJECTS, AND LOOPS")]),e._v(" "),a("p",[e._v("Today's Reflection: I understand the concepts.  I am having a hard time putting them into the code and making them work.")]),e._v(" "),a("h2",{attrs:{id:"what-are-the-three-ways-to-syntactically-write-a-function-what-are-the-differences-in-how-the-function-acts-if-any"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-are-the-three-ways-to-syntactically-write-a-function-what-are-the-differences-in-how-the-function-acts-if-any"}},[e._v("#")]),e._v(" What are the three ways to syntactically write a function? What are the differences in how the function acts (if any)?")]),e._v(" "),a("h3",{attrs:{id:"function-declcaration-hoisted-can-be-used-before-defined-how-does-that-work-function-expression-not-hoisted-cannot-be-used-before-defined-arrow-function-short-way-of-writing-a-function-expression"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-declcaration-hoisted-can-be-used-before-defined-how-does-that-work-function-expression-not-hoisted-cannot-be-used-before-defined-arrow-function-short-way-of-writing-a-function-expression"}},[e._v("#")]),e._v(" Function declcaration - hoisted can be used before defined (how does that work??????), function expression - not hoisted cannot be used before defined, arrow function - short way of writing a function expression.")]),e._v(" "),a("h2",{attrs:{id:"what-is-the-difference-between-parameters-and-arguments"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-is-the-difference-between-parameters-and-arguments"}},[e._v("#")]),e._v(" What is the difference between Parameters and Arguments?")]),e._v(" "),a("h3",{attrs:{id:"parameters-are-the-type-of-thing-that-functions-accept-arguments-are-the-specific-items-passed-into-the-function-from-the-invocation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#parameters-are-the-type-of-thing-that-functions-accept-arguments-are-the-specific-items-passed-into-the-function-from-the-invocation"}},[e._v("#")]),e._v(" Parameters are the type of thing that functions accept.  Arguments are the specific items passed into the function from the invocation.")]),e._v(" "),a("h2",{attrs:{id:"what-are-higher-order-functions-can-you-provide-an-example"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-are-higher-order-functions-can-you-provide-an-example"}},[e._v("#")]),e._v(" What are higher order functions? Can you provide an example?")]),e._v(" "),a("h3",{attrs:{id:"higher-order-functions-accept-a-function-as-a-parameter-and-return-a-function-an-example-is-array-prototype-map"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#higher-order-functions-accept-a-function-as-a-parameter-and-return-a-function-an-example-is-array-prototype-map"}},[e._v("#")]),e._v(" Higher order functions accept a function as a parameter and return a function.  An example is array.prototype.map")]),e._v(" "),a("p",[e._v("Afternoon Code: https://sherenec.github.io/JavaScript_Day2/")])])}),[],!1,null,null,null);t.default=r.exports}}]);